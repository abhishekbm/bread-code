<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="SetUp" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1437721821000</longProp>
        <longProp name="ThreadGroup.end_time">1437721821000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="HOST_PKG" elementType="Argument">
              <stringProp name="Argument.name">HOST_PKG</stringProp>
              <stringProp name="Argument.value">wl-flor-apnmpfd.wdw.disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="HOST_ASM" elementType="Argument">
              <stringProp name="Argument.name">HOST_ASM</stringProp>
              <stringProp name="Argument.value">wl-flor-apnmpfd.wdw.disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ASSEMBLY_CONTEXT" elementType="Argument">
              <stringProp name="Argument.name">ASSEMBLY_CONTEXT</stringProp>
              <stringProp name="Argument.value">assembly</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PACKAGING_CONTEXT" elementType="Argument">
              <stringProp name="Argument.name">PACKAGING_CONTEXT</stringProp>
              <stringProp name="Argument.value">packaging-api</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PORT" elementType="Argument">
              <stringProp name="Argument.name">PORT</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID1" elementType="Argument">
              <stringProp name="Argument.name">SWID1</stringProp>
              <stringProp name="Argument.value">${__Random(0,99999999)}-${__Random(0,9999)}-${__RandomString(4,abcdef)}-${__Random(0,9999)}-${__time(yyyyMMddhhmm)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID1_EMAIL" elementType="Argument">
              <stringProp name="Argument.name">SWID1_EMAIL</stringProp>
              <stringProp name="Argument.value">testmickey.SWID1-${__time(yyyyMMddhhmmss)}@disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID2" elementType="Argument">
              <stringProp name="Argument.name">SWID2</stringProp>
              <stringProp name="Argument.value">${__Random(0,99999999)}-${__Random(0,9999)}-${__RandomString(4,abcdef)}-${__Random(0,9999)}-${__time(yyyyMMddhhmm)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID2_EMAIL" elementType="Argument">
              <stringProp name="Argument.name">SWID2_EMAIL</stringProp>
              <stringProp name="Argument.value">testmickey.SWID2-${__time(yyyyMMddhhmmss)}@disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID3" elementType="Argument">
              <stringProp name="Argument.name">SWID3</stringProp>
              <stringProp name="Argument.value">${__Random(0,99999999)}-${__Random(0,9999)}-${__RandomString(4,abcdef)}-${__Random(0,9999)}-${__time(yyyyMMddhhmm)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID3_EMAIL" elementType="Argument">
              <stringProp name="Argument.name">SWID3_EMAIL</stringProp>
              <stringProp name="Argument.value">testmickey.SWID3-${__time(yyyyMMddhhmmss)}@disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID1_lastName" elementType="Argument">
              <stringProp name="Argument.name">SWID1_lastName</stringProp>
              <stringProp name="Argument.value">SwidOneLastName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID1_firstName" elementType="Argument">
              <stringProp name="Argument.name">SWID1_firstName</stringProp>
              <stringProp name="Argument.value">SwidOneFirstName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="GUID1_FIRST_NAME" elementType="Argument">
              <stringProp name="Argument.name">GUID1_FIRST_NAME</stringProp>
              <stringProp name="Argument.value">GuidOneFirstName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="GUID1_LAST_NAME" elementType="Argument">
              <stringProp name="Argument.name">GUID1_LAST_NAME</stringProp>
              <stringProp name="Argument.value">GuidOneLastName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID2_lastName" elementType="Argument">
              <stringProp name="Argument.name">SWID2_lastName</stringProp>
              <stringProp name="Argument.value">SwidTwoLastName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID2_firstName" elementType="Argument">
              <stringProp name="Argument.name">SWID2_firstName</stringProp>
              <stringProp name="Argument.value">SwidTwoFirstName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID3_lastName" elementType="Argument">
              <stringProp name="Argument.name">SWID3_lastName</stringProp>
              <stringProp name="Argument.value">SwidThreeLastName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID3_firstName" elementType="Argument">
              <stringProp name="Argument.name">SWID3_firstName</stringProp>
              <stringProp name="Argument.value">SwidThreeFirstName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="DATA_BASE_HOST" elementType="Argument">
              <stringProp name="Argument.name">DATA_BASE_HOST</stringProp>
              <stringProp name="Argument.value">ngelnx9-scan.wdw.disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="DATA_BASE_SERVICE" elementType="Argument">
              <stringProp name="Argument.name">DATA_BASE_SERVICE</stringProp>
              <stringProp name="Argument.value">NGEMPT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="DATA_BASE_USER_NAME" elementType="Argument">
              <stringProp name="Argument.name">DATA_BASE_USER_NAME</stringProp>
              <stringProp name="Argument.value">sfapp</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SWID1" elementType="Argument">
              <stringProp name="Argument.name">SWID1</stringProp>
              <stringProp name="Argument.value">${__Random(0,99999999)}-${__Random(0,9999)}-${__RandomString(4,abcdef)}-${__Random(0,9999)}-${__time(yyyyMMddhhmm)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID1_EMAIL" elementType="Argument">
              <stringProp name="Argument.name">SWID1_EMAIL</stringProp>
              <stringProp name="Argument.value">testmickey.SWID1-${__time(yyyyMMddhhmmss)}@disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID2" elementType="Argument">
              <stringProp name="Argument.name">SWID2</stringProp>
              <stringProp name="Argument.value">${__Random(0,99999999)}-${__Random(0,9999)}-${__RandomString(4,abcdef)}-${__Random(0,9999)}-${__time(yyyyMMddhhmm)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID2_EMAIL" elementType="Argument">
              <stringProp name="Argument.name">SWID2_EMAIL</stringProp>
              <stringProp name="Argument.value">testmickey.SWID2-${__time(yyyyMMddhhmmss)}@disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID3" elementType="Argument">
              <stringProp name="Argument.name">SWID3</stringProp>
              <stringProp name="Argument.value">${__Random(0,99999999)}-${__Random(0,9999)}-${__RandomString(4,abcdef)}-${__Random(0,9999)}-${__time(yyyyMMddhhmm)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID3_EMAIL" elementType="Argument">
              <stringProp name="Argument.name">SWID3_EMAIL</stringProp>
              <stringProp name="Argument.value">testmickey.SWID3-${__time(yyyyMMddhhmmss)}@disney.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID1_lastName" elementType="Argument">
              <stringProp name="Argument.name">SWID1_lastName</stringProp>
              <stringProp name="Argument.value">SwidOneLastName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID1_firstName" elementType="Argument">
              <stringProp name="Argument.name">SWID1_firstName</stringProp>
              <stringProp name="Argument.value">SwidOneFirstName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="GUID1_FIRST_NAME" elementType="Argument">
              <stringProp name="Argument.name">GUID1_FIRST_NAME</stringProp>
              <stringProp name="Argument.value">GuidOneFirstName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="GUID1_LAST_NAME" elementType="Argument">
              <stringProp name="Argument.name">GUID1_LAST_NAME</stringProp>
              <stringProp name="Argument.value">GuidOneLastName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID2_lastName" elementType="Argument">
              <stringProp name="Argument.name">SWID2_lastName</stringProp>
              <stringProp name="Argument.value">SwidTwoLastName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID2_firstName" elementType="Argument">
              <stringProp name="Argument.name">SWID2_firstName</stringProp>
              <stringProp name="Argument.value">SwidTwoFirstName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID3_lastName" elementType="Argument">
              <stringProp name="Argument.name">SWID3_lastName</stringProp>
              <stringProp name="Argument.value">SwidThreeLastName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SWID3_firstName" elementType="Argument">
              <stringProp name="Argument.name">SWID3_firstName</stringProp>
              <stringProp name="Argument.value">SwidThreeFirstName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="false">
          <stringProp name="dataSource">SFAPP</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="dbUrl">jdbc:oracle:thin:@//${DATA_BASE_HOST}:1526/${DATA_BASE_SERVICE}</stringProp>
          <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
          <stringProp name="username">${DATA_BASE_USER_NAME}</stringProp>
          <stringProp name="password">trustno1</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="MPT" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">MPT</stringProp>
          <stringProp name="dbUrl">jdbc:oracle:thin:@ngelnx9-scan.wdw.disney.com:1526/NGEMPT</stringProp>
          <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">trustno1</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">SFMD</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="ENV2" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">ENV2</stringProp>
          <stringProp name="dbUrl">jdbc:oracle:thin:@ngelnx12-scan.wdw.disney.com:1526/NGEENV2</stringProp>
          <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">trustno1</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">SFMD</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="DEV3" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">DEV3</stringProp>
          <stringProp name="dbUrl">jdbc:oracle:thin:@ngelnx14-scan.wdw.disney.com:1526/NGEDEV3A</stringProp>
          <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">trustno1</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">SFMD</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="108403163">resId</stringProp>
            <stringProp name="-2097609757">pastPassengerId</stringProp>
            <stringProp name="2068307">CID1</stringProp>
            <stringProp name="2068308">CID2</stringProp>
            <stringProp name="2068309">CID3</stringProp>
            <stringProp name="2068310">CID4</stringProp>
            <stringProp name="2068311">CID5</stringProp>
            <stringProp name="-1869122684">xpassId</stringProp>
            <stringProp name="91958580">gxpLinkId</stringProp>
            <stringProp name="463215266">diningResId</stringProp>
            <stringProp name="806959153">LocatorId</stringProp>
            <stringProp name="1674314293">reservationNumber</stringProp>
            <stringProp name="540171229">xbandRequestId</stringProp>
            <stringProp name="2024873128">xbandId</stringProp>
            <stringProp name="-604903692">externalNumber</stringProp>
            <stringProp name="949117682">secureId</stringProp>
            <stringProp name="-556542535">shortRangeTag</stringProp>
            <stringProp name="-2145445959">longRangeTag</stringProp>
            <stringProp name="-1738687551">xbandOwnerId</stringProp>
            <stringProp name="526678755">levelNGuestLinkID</stringProp>
            <stringProp name="-1898527617">levelNLinkID</stringProp>
            <stringProp name="-749662817">admissionEntitlementId</stringProp>
            <stringProp name="-157156091">scheduleItemId</stringProp>
            <stringProp name="-62640877">enterpriseContentId</stringProp>
            <stringProp name="-967903157">gatedAdmissionId</stringProp>
            <stringProp name="1152906891">DMEReservationId</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1330549608">
              <stringProp name="295733900">10${VAR}</stringProp>
              <stringProp name="194971942">9${VAR}</stringProp>
              <stringProp name="1684877086">1${VAR}</stringProp>
              <stringProp name="-1722586529">2${VAR}</stringProp>
              <stringProp name="-835082848">3${VAR}</stringProp>
              <stringProp name="52420833">4${VAR}</stringProp>
              <stringProp name="939924514">5${VAR}</stringProp>
              <stringProp name="691579914">1${VAR2}</stringProp>
              <stringProp name="-1860577047">2${VAR2}</stringProp>
              <stringProp name="-117766712">3${VAR2}</stringProp>
              <stringProp name="1749160706">9${VAR2}</stringProp>
              <stringProp name="-1335403799">123${VAR2}</stringProp>
              <stringProp name="1749160706">9${VAR2}</stringProp>
              <stringProp name="1193219419">${VAR2}</stringProp>
              <stringProp name="110081408">${VAR3}${VAR3}${VAR3}${VAR3}</stringProp>
              <stringProp name="1437517895">${VAR3}ABC${VAR3}XYZ</stringProp>
              <stringProp name="271133945">A${VAR3}Z${VAR3}</stringProp>
              <stringProp name="467647419">A${VAR2}Z${VAR2}</stringProp>
              <stringProp name="-1169292672">${VAR3}${VAR3}-${VAR3}-${VAR3}-${VAR3}-A${VAR3}XYZ${VAR3}</stringProp>
              <stringProp name="587763000">ABCDEF${VAR2}${VAR2}${VAR2}</stringProp>
              <stringProp name="-187083872">${VAR2}${VAR2}</stringProp>
              <stringProp name="587763031">ABCDEF${VAR2}${VAR2}${VAR3}</stringProp>
              <stringProp name="-187083841">${VAR2}${VAR3}</stringProp>
              <stringProp name="-1994538335">${VAR3}${VAR2}</stringProp>
              <stringProp name="-1994538304">${VAR3}${VAR3}</stringProp>
              <stringProp name="1588780251">${VAR2}${VAR3}${VAR3}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store Registered Profile of SWID1 " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;registeredGuestProfile&gt;&#xd;
&lt;addressList&gt;&#xd;
&lt;e&gt;&#xd;
&lt;city&gt;Orlando&lt;/city&gt;&#xd;
&lt;country&gt;US&lt;/country&gt;&#xd;
&lt;id&gt;120160632&lt;/id&gt;&#xd;
&lt;line1&gt;Lake Buna Vista&lt;/line1&gt;&#xd;
&lt;postalCode&gt;32830&lt;/postalCode&gt;&#xd;
&lt;stateOrProvince&gt;FL&lt;/stateOrProvince&gt;&#xd;
&lt;type&gt;SHIPPING&lt;/type&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;e&gt;&#xd;
&lt;city&gt;Orlando&lt;/city&gt;&#xd;
&lt;country&gt;US&lt;/country&gt;&#xd;
&lt;id&gt;120160631&lt;/id&gt;&#xd;
&lt;line1&gt;Lake Buna Vista&lt;/line1&gt;&#xd;
&lt;postalCode&gt;32830&lt;/postalCode&gt;&#xd;
&lt;stateOrProvince&gt;FL&lt;/stateOrProvince&gt;&#xd;
&lt;type&gt;BILLING&lt;/type&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;/addressList&gt;&#xd;
&lt;affiliationList&gt;&#xd;
&lt;e&gt;&#xd;
&lt;affiliationType&gt;FL_RESIDENT&lt;/affiliationType&gt;&#xd;
&lt;validationDate&gt;2013-10-31&lt;/validationDate&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;/affiliationList&gt;&#xd;
&lt;countryCode&gt;US&lt;/countryCode&gt;&#xd;
&lt;dateOfBirth&gt;1985-01-03&lt;/dateOfBirth&gt;&#xd;
&lt;email&gt;${SWID1_EMAIL}&lt;/email&gt;&#xd;
&lt;gender&gt;NOT_SPECIFIED&lt;/gender&gt;&#xd;
&lt;name&gt;&#xd;
&lt;firstName&gt;${SWID1_firstName}&lt;/firstName&gt;&#xd;
&lt;lastName&gt;${SWID1_lastName}&lt;/lastName&gt;&#xd;
&lt;title&gt;Mr.&lt;/title&gt;&#xd;
&lt;/name&gt;&#xd;
&lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
&lt;swid&gt;{${SWID1}}&lt;/swid&gt;&#xd;
&lt;/registeredGuestProfile&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_PKG}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${PACKAGING_CONTEXT}/event/GOREG/REGISTEREDPROFILE/%7B${SWID1}%7D</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="" elementType="HTTPFileArg">
                <stringProp name="File.path"></stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store Registered Profile of SWID2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;registeredGuestProfile&gt;&#xd;
&lt;addressList&gt;&#xd;
&lt;e&gt;&#xd;
&lt;city&gt;Orlando&lt;/city&gt;&#xd;
&lt;country&gt;US&lt;/country&gt;&#xd;
&lt;id&gt;120160632&lt;/id&gt;&#xd;
&lt;line1&gt;Lake Buna Vista&lt;/line1&gt;&#xd;
&lt;postalCode&gt;32830&lt;/postalCode&gt;&#xd;
&lt;stateOrProvince&gt;FL&lt;/stateOrProvince&gt;&#xd;
&lt;type&gt;SHIPPING&lt;/type&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;e&gt;&#xd;
&lt;city&gt;Orlando&lt;/city&gt;&#xd;
&lt;country&gt;US&lt;/country&gt;&#xd;
&lt;id&gt;120160631&lt;/id&gt;&#xd;
&lt;line1&gt;Lake Buna Vista&lt;/line1&gt;&#xd;
&lt;postalCode&gt;32830&lt;/postalCode&gt;&#xd;
&lt;stateOrProvince&gt;FL&lt;/stateOrProvince&gt;&#xd;
&lt;type&gt;BILLING&lt;/type&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;/addressList&gt;&#xd;
&lt;affiliationList&gt;&#xd;
&lt;e&gt;&#xd;
&lt;affiliationType&gt;FL_RESIDENT&lt;/affiliationType&gt;&#xd;
&lt;validationDate&gt;2013-10-31&lt;/validationDate&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;/affiliationList&gt;&#xd;
&lt;countryCode&gt;US&lt;/countryCode&gt;&#xd;
&lt;dateOfBirth&gt;1985-01-03&lt;/dateOfBirth&gt;&#xd;
&lt;email&gt;${SWID2_EMAIL}&lt;/email&gt;&#xd;
&lt;gender&gt;NOT_SPECIFIED&lt;/gender&gt;&#xd;
&lt;name&gt;&#xd;
&lt;firstName&gt;${SWID2_firstName}&lt;/firstName&gt;&#xd;
&lt;lastName&gt;${SWID2_lastName}&lt;/lastName&gt;&#xd;
&lt;title&gt;Mr.&lt;/title&gt;&#xd;
&lt;/name&gt;&#xd;
&lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
&lt;swid&gt;{${SWID2}}&lt;/swid&gt;&#xd;
&lt;/registeredGuestProfile&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_PKG}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${PACKAGING_CONTEXT}/event/GOREG/REGISTEREDPROFILE/%7B${SWID2}%7D</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="" elementType="HTTPFileArg">
                <stringProp name="File.path"></stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store Registered Profile of SWID3" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;registeredGuestProfile&gt;&#xd;
&lt;addressList&gt;&#xd;
&lt;e&gt;&#xd;
&lt;city&gt;Orlando&lt;/city&gt;&#xd;
&lt;country&gt;US&lt;/country&gt;&#xd;
&lt;id&gt;120160632&lt;/id&gt;&#xd;
&lt;line1&gt;Lake Buna Vista&lt;/line1&gt;&#xd;
&lt;postalCode&gt;32830&lt;/postalCode&gt;&#xd;
&lt;stateOrProvince&gt;FL&lt;/stateOrProvince&gt;&#xd;
&lt;type&gt;SHIPPING&lt;/type&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;e&gt;&#xd;
&lt;city&gt;Orlando&lt;/city&gt;&#xd;
&lt;country&gt;US&lt;/country&gt;&#xd;
&lt;id&gt;120160631&lt;/id&gt;&#xd;
&lt;line1&gt;Lake Buna Vista&lt;/line1&gt;&#xd;
&lt;postalCode&gt;32830&lt;/postalCode&gt;&#xd;
&lt;stateOrProvince&gt;FL&lt;/stateOrProvince&gt;&#xd;
&lt;type&gt;BILLING&lt;/type&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;/addressList&gt;&#xd;
&lt;affiliationList&gt;&#xd;
&lt;e&gt;&#xd;
&lt;affiliationType&gt;FL_RESIDENT&lt;/affiliationType&gt;&#xd;
&lt;validationDate&gt;2013-10-31&lt;/validationDate&gt;&#xd;
&lt;/e&gt;&#xd;
&lt;/affiliationList&gt;&#xd;
&lt;countryCode&gt;US&lt;/countryCode&gt;&#xd;
&lt;dateOfBirth&gt;1985-01-03&lt;/dateOfBirth&gt;&#xd;
&lt;email&gt;${SWID3_EMAIL}&lt;/email&gt;&#xd;
&lt;gender&gt;NOT_SPECIFIED&lt;/gender&gt;&#xd;
&lt;name&gt;&#xd;
&lt;firstName&gt;${SWID3_firstName}&lt;/firstName&gt;&#xd;
&lt;lastName&gt;${SWID3_lastName}&lt;/lastName&gt;&#xd;
&lt;title&gt;Mr.&lt;/title&gt;&#xd;
&lt;/name&gt;&#xd;
&lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
&lt;swid&gt;{${SWID3}}&lt;/swid&gt;&#xd;
&lt;/registeredGuestProfile&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_PKG}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${PACKAGING_CONTEXT}/event/GOREG/REGISTEREDPROFILE/%7B${SWID3}%7D</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="" elementType="HTTPFileArg">
                <stringProp name="File.path"></stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="F&amp;F Services" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438004738000</longProp>
        <longProp name="ThreadGroup.end_time">1438004738000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() +10); var date=d.getDate(); var month=d.get</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() +20); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="currentDate" elementType="Argument">
              <stringProp name="Argument.name">currentDate</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="formattedCurrentDate" elementType="Argument">
              <stringProp name="Argument.name">formattedCurrentDate</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Guest identifiers of SWID1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID1}%7D/identifiers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SWID1_XID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">SWID1_XID</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/guest/(.+?)/profile</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_logged_in_xid</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Guest identifiers of SWID2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID2}%7D/identifiers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SWID2_XID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">SWID2_XID</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/guest/(.+?)/profile</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_logged_in_xid</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Guest identifiers of SWID3" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID3}%7D/identifiers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SWID3_XID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">SWID3_XID</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/guest/(.+?)/profile</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_logged_in_xid</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store_Managed Guest- GUID1.1 for SWID1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;profile&quot;: {&#xd;
        &quot;name&quot;: {&#xd;
            &quot;title&quot;: &quot;Mr.&quot;,&#xd;
            &quot;firstName&quot;: &quot;${GUID1_FIRST_NAME}&quot;,&#xd;
            &quot;lastName&quot;: &quot;${GUID1_LAST_NAME}&quot;&#xd;
        },&#xd;
        &quot;age&quot;: 17&#xd;
    },&#xd;
    &quot;friendsAndFamily&quot;: {&#xd;
        &quot;groupClassification&quot;: {&#xd;
            &quot;name&quot;: &quot;TRAVELLING_PARTY&quot;&#xd;
        },&#xd;
        &quot;accessClassification&quot;: {&#xd;
            &quot;name&quot;: &quot;PLAN_VIEW_ALL&quot;&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID1}%7D/managed-guests</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Strore registered profile in SF</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GUID1.1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1.1</stringProp>
            <stringProp name="RegexExtractor.regex">guest-id-value=(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">GUID1.1</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Guest identifiers by GUID1.1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/id;guid=${GUID1.1}/identifiers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Guest identifiers by SWID1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GUID1.1_XID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1.1_XID</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/guest/(.+?)/profile</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_logged_in_xid</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store_Managed Guest- GUID1.2 for SWID2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;profile&quot;: {&#xd;
        &quot;name&quot;: {&#xd;
            &quot;title&quot;: &quot;Mr.&quot;,&#xd;
            &quot;firstName&quot;: &quot;${GUID1_FIRST_NAME}&quot;,&#xd;
            &quot;lastName&quot;: &quot;${GUID1_LAST_NAME}&quot;&#xd;
        },&#xd;
        &quot;age&quot;: 17&#xd;
    },&#xd;
    &quot;friendsAndFamily&quot;: {&#xd;
        &quot;groupClassification&quot;: {&#xd;
            &quot;name&quot;: &quot;TRAVELLING_PARTY&quot;&#xd;
        },&#xd;
        &quot;accessClassification&quot;: {&#xd;
            &quot;name&quot;: &quot;PLAN_VIEW_ALL&quot;&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID2}%7D/managed-guests</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Strore registered profile in SF</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GUID1.2" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1.2</stringProp>
            <stringProp name="RegexExtractor.regex">guest-id-value=(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">GUID1.2</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Guest identifiers by GUID1.1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/id;guid=${GUID1.2}/identifiers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Guest identifiers by SWID1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GUID1.2_XID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1.2_XID</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/guest/(.+?)/profile</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_logged_in_xid</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store_Managed Guest- GUID1.3 for SWID1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;profile&quot;: {&#xd;
        &quot;name&quot;: {&#xd;
            &quot;title&quot;: &quot;Mr.&quot;,&#xd;
            &quot;firstName&quot;: &quot;${GUID1_FIRST_NAME}&quot;,&#xd;
            &quot;lastName&quot;: &quot;${GUID1_LAST_NAME}&quot;&#xd;
        },&#xd;
        &quot;age&quot;: 17&#xd;
    },&#xd;
    &quot;friendsAndFamily&quot;: {&#xd;
        &quot;groupClassification&quot;: {&#xd;
            &quot;name&quot;: &quot;TRAVELLING_PARTY&quot;&#xd;
        },&#xd;
        &quot;accessClassification&quot;: {&#xd;
            &quot;name&quot;: &quot;PLAN_VIEW_ALL&quot;&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID1}%7D/managed-guests</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Strore registered profile in SF</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GUID1.3" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1.3</stringProp>
            <stringProp name="RegexExtractor.regex">guest-id-value=(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">GUID1.3</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store_Managed Guest- GUID1.4 for SWID3" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;profile&quot;: {&#xd;
        &quot;name&quot;: {&#xd;
            &quot;title&quot;: &quot;Mr.&quot;,&#xd;
            &quot;firstName&quot;: &quot;${GUID1_FIRST_NAME}&quot;,&#xd;
            &quot;lastName&quot;: &quot;${GUID1_LAST_NAME}&quot;&#xd;
        },&#xd;
        &quot;age&quot;: 17&#xd;
    },&#xd;
    &quot;friendsAndFamily&quot;: {&#xd;
        &quot;groupClassification&quot;: {&#xd;
            &quot;name&quot;: &quot;TRAVELLING_PARTY&quot;&#xd;
        },&#xd;
        &quot;accessClassification&quot;: {&#xd;
            &quot;name&quot;: &quot;PLAN_VIEW_ALL&quot;&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID3}%7D/managed-guests</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Strore registered profile in SF</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GUID1.4" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1.4</stringProp>
            <stringProp name="RegexExtractor.regex">guest-id-value=(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">GUID1.4</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Convert Invitaion With Invalid Managed Guest" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;invitation-type&quot;: &quot;convert&quot;,&#xd;
    &quot;guest-id-type&quot;: &quot;swid&quot;,&#xd;
    &quot;guest-id-value&quot;: &quot;{${SWID1}}&quot;,&#xd;
    &quot;managed-guest-id-type&quot;: &quot;guid&quot;,&#xd;
    &quot;managed-guest-id-value&quot;: &quot;${GUID1.0}&quot;,&#xd;
    &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
    &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
    &quot;share-classification&quot;: [&#xd;
        &quot;SHARE_MEDIA_DOWNLOAD&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/sent-invitations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Convert InvitaionWith Invalid Sender Xid" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;invitation-type&quot;: &quot;convert&quot;,&#xd;
    &quot;guest-id-type&quot;: &quot;swid&quot;,&#xd;
    &quot;guest-id-value&quot;: &quot;{${SWID1}}&quot;,&#xd;
    &quot;managed-guest-id-type&quot;: &quot;guid&quot;,&#xd;
    &quot;managed-guest-id-value&quot;: &quot;${GUID1.1}&quot;,&#xd;
    &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
    &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
    &quot;share-classification&quot;: [&#xd;
        &quot;SHARE_MEDIA_DOWNLOAD&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/Swid1Xid1/sent-invitations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51512">404</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Convert Invitaion With Guest IdType as Swid" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;invitation-type&quot;: &quot;convert&quot;,&#xd;
    &quot;guest-id-type&quot;: &quot;swid&quot;,&#xd;
    &quot;guest-id-value&quot;: &quot;{${SWID2}}&quot;,&#xd;
    &quot;managed-guest-id-type&quot;: &quot;guid&quot;,&#xd;
    &quot;managed-guest-id-value&quot;: &quot;${GUID1.1}&quot;,&#xd;
    &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
    &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
    &quot;share-classification&quot;: [&#xd;
        &quot;SHARE_MEDIA_DOWNLOAD&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/sent-invitations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="invitation_id1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">invitation_id1</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/sent-invitation/((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invitation_id_not found</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Convert Invitaion With Guest IdType as guid" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;invitation-type&quot;: &quot;convert&quot;,&#xd;
    &quot;guest-id-type&quot;: &quot;guid&quot;,&#xd;
    &quot;guest-id-value&quot;: &quot;${GUID1.2}&quot;,&#xd;
    &quot;managed-guest-id-type&quot;: &quot;guid&quot;,&#xd;
    &quot;managed-guest-id-value&quot;: &quot;${GUID1.1}&quot;,&#xd;
    &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
    &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
    &quot;share-classification&quot;: [&#xd;
        &quot;SHARE_MEDIA_DOWNLOAD&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/sent-invitations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="invitation_id2" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">invitation_id2</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/sent-invitation/((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invitation_id_not found</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Convert Invitaion With Guest IdType as email" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;invitation-type&quot;: &quot;convert&quot;,&#xd;
    &quot;guest-id-type&quot;: &quot;email&quot;,&#xd;
    &quot;guest-id-value&quot;: &quot;${SWID2_EMAIL}&quot;,&#xd;
    &quot;managed-guest-id-type&quot;: &quot;guid&quot;,&#xd;
    &quot;managed-guest-id-value&quot;: &quot;${GUID1.1}&quot;,&#xd;
    &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
    &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
    &quot;share-classification&quot;: [&#xd;
        &quot;SHARE_MEDIA_DOWNLOAD&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/sent-invitations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="invitation_id3" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">invitation_id3</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/sent-invitation/((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invitation_id_not found</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Bulk Invitation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&#xd;
    &quot;invitations&quot;: [&#xd;
        {&#xd;
            &quot;invitation-type&quot;: &quot;convert&quot;,&#xd;
            &quot;guest-id-type&quot;: &quot;swid&quot;,&#xd;
            &quot;guest-id-value&quot;: &quot;{${SWID3}}&quot;,&#xd;
            &quot;managed-guest-id-type&quot;: &quot;guid&quot;,&#xd;
            &quot;managed-guest-id-value&quot;: &quot;${GUID1.1}&quot;,&#xd;
            &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
            &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
            &quot;share-classification&quot;: [&#xd;
                &quot;SHARE_MEDIA_NONE&quot;&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;invitation-type&quot;: &quot;convert&quot;,&#xd;
            &quot;guest-id-type&quot;: &quot;guid&quot;,&#xd;
            &quot;guest-id-value&quot;: &quot;${GUID1.4}&quot;,&#xd;
            &quot;managed-guest-id-type&quot;: &quot;guid&quot;,&#xd;
            &quot;managed-guest-id-value&quot;: &quot;${GUID1.1}&quot;,&#xd;
            &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
            &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
            &quot;share-classification&quot;: [&#xd;
                &quot;SHARE_MEDIA_NONE&quot;&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/sent-bulk-invitations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Disney-Internal-Site</stringProp>
                <stringProp name="Header.value">wdw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitation By Inv Id Before Decline" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitation/${invitation_id1}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Sent Invitation By Inv Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">status</stringProp>
            <stringProp name="JSONPATH">$.status</stringProp>
            <stringProp name="DEFAULT">NO VALUE</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="982065527">Pending</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">status</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Resend Convert Invitaion With Guest IdType as Swid" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{    &quot;invitation-id&quot;:&quot;${invitation_id1}&quot;} &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/sent-invitations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="invitation_id1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">invitation_id1</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/sent-invitation/((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invitation_id_not found</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Decline Convert Invitation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{    &quot;status&quot;: &quot;decline&quot;} &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID2_XID}/received-invitation/${invitation_id1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitation By Inv Id After Decline" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitation/${invitation_id1}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Sent Invitation By Inv Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">status</stringProp>
            <stringProp name="JSONPATH">$.status</stringProp>
            <stringProp name="DEFAULT">NO VALUE</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="632840270">Declined</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">status</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitation By Inv Id Before Revoke" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitation/${invitation_id3}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Sent Invitation By Inv Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">status</stringProp>
            <stringProp name="JSONPATH">$.status</stringProp>
            <stringProp name="DEFAULT">NO VALUE</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="982065527">Pending</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">status</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Revoke Convert Invitation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{    &quot;status&quot;: &quot;revoke&quot;} &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/sent-invitation/${invitation_id3}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitation By Inv Id After Revoke" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitation/${invitation_id3}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Sent Invitation By Inv Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">status</stringProp>
            <stringProp name="JSONPATH">$.status</stringProp>
            <stringProp name="DEFAULT">NO VALUE</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1530176898">Revoked</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">status</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitation By Inv Id Before Accept" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitation/${invitation_id2}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Sent Invitation By Inv Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">status</stringProp>
            <stringProp name="JSONPATH">$.status</stringProp>
            <stringProp name="DEFAULT">NO VALUE</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="982065527">Pending</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">status</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accept Convert Invitation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;invitation-id&quot;: &quot;${invitation_id2}&quot;,&#xd;
    &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
    &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
    &quot;share-classification&quot;: [&#xd;
        &quot;SHARE_MEDIA_DOWNLOAD&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/friends</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitation By Inv Id After Accept" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitation/${invitation_id2}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Sent Invitation By Inv Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">status</stringProp>
            <stringProp name="JSONPATH">$.status</stringProp>
            <stringProp name="DEFAULT">NO VALUE</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2081881145">Accepted</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">status</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Received Invitation By Inv Id After Accept" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/received-invitation/${invitation_id2}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Receivedt Invitation By Inv Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">status</stringProp>
            <stringProp name="JSONPATH">$.status</stringProp>
            <stringProp name="DEFAULT">NO VALUE</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2081881145">Accepted</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">status</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitations with guest id type as swid" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitations?guest-id-type=swid&amp;guest-id-value=%7B${SWID1}%7D</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Sent Invitations with guest id type as swid</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.itemCount</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitations with guest id type as swid With Start Item and Item Count" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitations?guest-id-type=swid&amp;guest-id-value=%7B${SWID1}%7D&amp;start-item=0&amp;item-limit=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Sent Invitations with guest id type as swid With Start Item and Item Count</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.itemCount</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Sent Invitations with guest id type as xid and  status Accepted Invitation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/sent-invitations?guest-id-type=xid&amp;guest-id-value=${SWID1_XID}&amp;invitation-type=convert&amp;status=accepted</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Sent Invitations with guest id type as xid and status Accepted Invitation</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.itemCount</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Received Invitations with guest id type as swid" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/received-invitations?guest-id-type=swid&amp;guest-id-value=%7B${SWID2}%7D</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Received  Invitations with guest id type as swid</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.itemCount</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51">3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Received Invitations with guest id type as swid With Start Item and Item Count" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/received-invitations?guest-id-type=swid&amp;guest-id-value=%7B${SWID2}%7D&amp;start-item=0&amp;item-limit=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Received  Invitations with guest id type as swid With Start Item and Item Count</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.itemCount</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Received Invitations with guest id type as xid and status Accepted Invitation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/received-invitations?guest-id-type=xid&amp;guest-id-value=${SWID2_XID}&amp;invitation-type=convert&amp;status=accepted</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Received  Invitations with guest id type as swid and status Accepted Invitation</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.itemCount</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Convert Invitaion With Guest IdType as Swid" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;invitation-type&quot;: &quot;convert&quot;,&#xd;
    &quot;guest-id-type&quot;: &quot;swid&quot;,&#xd;
    &quot;guest-id-value&quot;: &quot;{${SWID2}}&quot;,&#xd;
    &quot;managed-guest-id-type&quot;: &quot;guid&quot;,&#xd;
    &quot;managed-guest-id-value&quot;: &quot;${GUID1.3}&quot;,&#xd;
    &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
    &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
    &quot;share-classification&quot;: [&#xd;
        &quot;SHARE_MEDIA_DOWNLOAD&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/sent-invitations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="invitation_id4" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">invitation_id4</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/sent-invitation/((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invitation_id_not found</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Accept Convert Invitation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;invitation-id&quot;: &quot;${invitation_id4}&quot;,&#xd;
    &quot;access-classification&quot;: &quot;PLAN_VIEW_ALL&quot;,&#xd;
    &quot;group-classification&quot;: &quot;TRAVELLING_PARTY&quot;,&#xd;
    &quot;share-classification&quot;: [&#xd;
        &quot;SHARE_MEDIA_DOWNLOAD&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/friends</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide F&amp;F Member Detail with XID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/friend/${GUID1.2_XID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide F&amp;F Member Detail with XID</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify F&amp;F Member Detail with XID" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;group-classification&quot;: &quot;ARCHIVE&quot;} </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/friend/${GUID1.2_XID}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Modify  F&amp;F Member Detail with XID</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">{${SWID1}}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide F&amp;F Member Detail with XID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/friend/${GUID1.2_XID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide F&amp;F Member Detail with XID</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">group-classification</stringProp>
            <stringProp name="JSONPATH">$.group-classification</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-30118750">ARCHIVE</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">group-classification</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide F&amp;F List" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/friends?guest-id-type=xid&amp;guest-id-value=${SWID1_XID}&amp;start-item=0&amp;item-limit=20&amp;guest-locators=guid</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide F&amp;F List</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.itemCount</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="50">2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Remove F&amp;F Member Detail with XID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/friend/${GUID1.2_XID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Remove F&amp;F Member Detail with XID</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide F&amp;F Member Detail with XID After Delete" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/friend/${GUID1.2_XID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide F&amp;F Member Detail with XID After Delete</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51512">404</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide F&amp;F List" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/friends?guest-id-type=xid&amp;guest-id-value=${SWID1_XID}&amp;start-item=0&amp;item-limit=20&amp;guest-locators=guid</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide F&amp;F List</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.itemCount</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="F&amp;F Type Ahead" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438086031000</longProp>
        <longProp name="ThreadGroup.end_time">1438086031000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide FnF Type Ahead Service by Guest Id" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${ASSEMBLY_CONTEXT}/friends-friends?guest-id-type=swid&amp;guest-id-value=%7B${SWID1}%7D&amp;start-item=0&amp;item-limit=10</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide FnF Type Ahead Service by Guest Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor Status" enabled="true">
            <stringProp name="VAR">itemCount</stringProp>
            <stringProp name="JSONPATH">$.item-count</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion status" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="50">2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemCount</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Managed Guest Profile" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1354097083000</longProp>
        <longProp name="ThreadGroup.end_time">1354097083000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Store a registered Guest Profile, Preferences and Provides the respective data(Profile,Preferences)</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="VAR" elementType="Argument">
              <stringProp name="Argument.name">VAR</stringProp>
              <stringProp name="Argument.value">${__Random(100000,999999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="VAR2" elementType="Argument">
              <stringProp name="Argument.name">VAR2</stringProp>
              <stringProp name="Argument.value">${__Random(10000,99999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="VAR3" elementType="Argument">
              <stringProp name="Argument.name">VAR3</stringProp>
              <stringProp name="Argument.value">${__Random(1000,9999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() + 5); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() + 60); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="formattedCurrentDate" elementType="Argument">
              <stringProp name="Argument.name">formattedCurrentDate</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date-of-birth" elementType="Argument">
              <stringProp name="Argument.name">date-of-birth</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() -7300); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="108403163">resId</stringProp>
            <stringProp name="-2097609757">pastPassengerId</stringProp>
            <stringProp name="2068307">CID1</stringProp>
            <stringProp name="2068308">CID2</stringProp>
            <stringProp name="2068309">CID3</stringProp>
            <stringProp name="2068310">CID4</stringProp>
            <stringProp name="2068311">CID5</stringProp>
            <stringProp name="-1869122684">xpassId</stringProp>
            <stringProp name="91958580">gxpLinkId</stringProp>
            <stringProp name="463215266">diningResId</stringProp>
            <stringProp name="806959153">LocatorId</stringProp>
            <stringProp name="1674314293">reservationNumber</stringProp>
            <stringProp name="540171229">xbandRequestId</stringProp>
            <stringProp name="2024873128">xbandId</stringProp>
            <stringProp name="-604903692">externalNumber</stringProp>
            <stringProp name="949117682">secureId</stringProp>
            <stringProp name="-556542535">shortRangeTag</stringProp>
            <stringProp name="-2145445959">longRangeTag</stringProp>
            <stringProp name="-1738687551">xbandOwnerId</stringProp>
            <stringProp name="526678755">levelNGuestLinkID</stringProp>
            <stringProp name="-1898527617">levelNLinkID</stringProp>
            <stringProp name="-749662817">admissionEntitlementId</stringProp>
            <stringProp name="-157156091">scheduleItemId</stringProp>
            <stringProp name="-62640877">enterpriseContentId</stringProp>
            <stringProp name="-967903157">gatedAdmissionId</stringProp>
            <stringProp name="1152906891">DMEReservationId</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1330549608">
              <stringProp name="295733900">10${VAR}</stringProp>
              <stringProp name="194971942">9${VAR}</stringProp>
              <stringProp name="1684877086">1${VAR}</stringProp>
              <stringProp name="-1722586529">2${VAR}</stringProp>
              <stringProp name="-835082848">3${VAR}</stringProp>
              <stringProp name="52420833">4${VAR}</stringProp>
              <stringProp name="939924514">5${VAR}</stringProp>
              <stringProp name="691579914">1${VAR2}</stringProp>
              <stringProp name="-1860577047">2${VAR2}</stringProp>
              <stringProp name="-117766712">3${VAR2}</stringProp>
              <stringProp name="1749160706">9${VAR2}</stringProp>
              <stringProp name="-1335403799">123${VAR2}</stringProp>
              <stringProp name="1749160706">9${VAR2}</stringProp>
              <stringProp name="1193219419">${VAR2}</stringProp>
              <stringProp name="110081408">${VAR3}${VAR3}${VAR3}${VAR3}</stringProp>
              <stringProp name="1437517895">${VAR3}ABC${VAR3}XYZ</stringProp>
              <stringProp name="271133945">A${VAR3}Z${VAR3}</stringProp>
              <stringProp name="467647419">A${VAR2}Z${VAR2}</stringProp>
              <stringProp name="-1169292672">${VAR3}${VAR3}-${VAR3}-${VAR3}-${VAR3}-A${VAR3}XYZ${VAR3}</stringProp>
              <stringProp name="587763000">ABCDEF${VAR2}${VAR2}${VAR2}</stringProp>
              <stringProp name="-187083872">${VAR2}${VAR2}</stringProp>
              <stringProp name="587763031">ABCDEF${VAR2}${VAR2}${VAR3}</stringProp>
              <stringProp name="-187083841">${VAR2}${VAR3}</stringProp>
              <stringProp name="-1994538335">${VAR3}${VAR2}</stringProp>
              <stringProp name="-1994538304">${VAR3}${VAR3}</stringProp>
              <stringProp name="1588780251">${VAR2}${VAR3}${VAR3}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store_Managed Guest- GUID1.1 for SWID1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd; 	&quot;profile&quot;: {&#xd; 		&quot;name&quot;: {&#xd; 			&quot;title&quot;: &quot;Mr.&quot;,&#xd; 			&quot;firstName&quot;: &quot;${GUID1_FIRST_NAME}&quot;,&#xd; 			&quot;lastName&quot;: &quot;${GUID1_LAST_NAME}&quot;&#xd; 		},&#xd; 		&quot;age&quot;: 17,&#xd; 	},&#xd; 	&quot;friendsAndFamily&quot;: {&#xd; 		&quot;groupClassification&quot;: {&#xd; 			&quot;name&quot;: &quot;TRAVELLING_PARTY&quot;&#xd; 		},&#xd; 		&quot;accessClassification&quot;: {&#xd; 			&quot;name&quot;: &quot;PLAN_VIEW_ALL&quot;&#xd; 		}&#xd; 	}&#xd; }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID1}%7D/managed-guests</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Strore registered profile in SF</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GUID1.1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1.1</stringProp>
            <stringProp name="RegexExtractor.regex">guest-id-value=(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">GUID1.1</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store_Managed Guest-GUID1.1_Profile_Preferences" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;managedguest&gt;   &lt;ownerId&gt;{${SWID1}}&lt;/ownerId&gt;   &lt;guid&gt;${GUID1.1}&lt;/guid&gt;   &lt;friendsAndFamily&gt;     &lt;accessClassification&gt;       &lt;name&gt;PLAN_MANAGE_VIEW_ALL&lt;/name&gt;     &lt;/accessClassification&gt;     &lt;groupClassification&gt;       &lt;name&gt;TRAVELLING_PARTY&lt;/name&gt;     &lt;/groupClassification&gt;   &lt;/friendsAndFamily&gt;   &lt;preferences&gt;     &lt;avatar&gt;       &lt;url&gt;http://wl-flor-apnatzd.wdw.disney.com:8085/cm/services/guest/v1/avatarr/123456&lt;/url&gt;     &lt;/avatar&gt;     &lt;communicationPreferences&gt;       &lt;preferredLanguage&gt;english&lt;/preferredLanguage&gt;     &lt;/communicationPreferences&gt;     &lt;favoriteCharacter&gt;       &lt;url&gt;http://wl-flor-apnatzd.wdw.disney.com:8085/cm/services/guest/v1/character/234765&lt;/url&gt;     &lt;/favoriteCharacter&gt;   &lt;/preferences&gt;   &lt;profile&gt;     &lt;affiliationsList&gt;       &lt;e&gt;         &lt;expirationDate&gt;2010-12-12&lt;/expirationDate&gt;         &lt;memberId&gt;AAA Member Number&lt;/memberId&gt;         &lt;name&gt;           &lt;firstName&gt;${GUID1_FIRST_NAME}&lt;/firstName&gt;           &lt;lastName&gt;${GUID1_LAST_NAME}&lt;/lastName&gt;           &lt;middleName&gt;Ross&lt;/middleName&gt;           &lt;suffix&gt;Jr&lt;/suffix&gt;           &lt;title&gt;Mr&lt;/title&gt;         &lt;/name&gt;         &lt;type&gt;AAA&lt;/type&gt;         &lt;validated&gt;true&lt;/validated&gt;         &lt;validationDate&gt;2011-12-12&lt;/validationDate&gt;       &lt;/e&gt;       &lt;e&gt;         &lt;ageGroup&gt;child&lt;/ageGroup&gt;         &lt;apTypeCode&gt;6786trutyu6987689&lt;/apTypeCode&gt;         &lt;barCode&gt;2345erte4546545&lt;/barCode&gt;         &lt;entitlementId&gt;6856trurt6876&lt;/entitlementId&gt;         &lt;expirationDate&gt;2010-12-12&lt;/expirationDate&gt;         &lt;memberId&gt;AAA Member Number&lt;/memberId&gt;         &lt;name&gt;           &lt;firstName&gt;${GUID1_FIRST_NAME}&lt;/firstName&gt;           &lt;lastName&gt;${GUID1_LAST_NAME}&lt;/lastName&gt;           &lt;middleName&gt;Ross&lt;/middleName&gt;           &lt;suffix&gt;Jr&lt;/suffix&gt;           &lt;title&gt;Mr&lt;/title&gt;         &lt;/name&gt;         &lt;origin&gt;Test&lt;/origin&gt;         &lt;ticketSite&gt;ticketSite&lt;/ticketSite&gt;         &lt;ticketStation&gt;4075662569&lt;/ticketStation&gt;         &lt;ticketDate&gt;2012-12-12&lt;/ticketDate&gt;         &lt;ticketNumber&gt;23453245ertert456&lt;/ticketNumber&gt;         &lt;passType&gt;Annual&lt;/passType&gt;         &lt;type&gt;AAA&lt;/type&gt;         &lt;validated&gt;true&lt;/validated&gt;         &lt;validationDate&gt;2011-12-12&lt;/validationDate&gt;       &lt;/e&gt;     &lt;/affiliationsList&gt;     &lt;age&gt;11&lt;/age&gt;     &lt;ageGroup&gt;teen&lt;/ageGroup&gt;     &lt;contactInformations&gt;       &lt;e&gt;         &lt;details&gt;           &lt;e&gt;             &lt;email&gt;${GUID1_EMAIL}&lt;/email&gt;           &lt;/e&gt;         &lt;/details&gt;         &lt;type&gt;email&lt;/type&gt;       &lt;/e&gt;       &lt;e&gt;         &lt;details&gt;           &lt;e&gt;             &lt;city&gt;Orlando&lt;/city&gt;             &lt;country&gt;US&lt;/country&gt;             &lt;line1&gt;200 Celebration&lt;/line1&gt;             &lt;line2&gt;Apt 203&lt;/line2&gt;             &lt;line3&gt;Near DMV&lt;/line3&gt;             &lt;postalCode&gt;34747&lt;/postalCode&gt;             &lt;state&gt;FL&lt;/state&gt;             &lt;type&gt;Mailing&lt;/type&gt;           &lt;/e&gt;           &lt;e&gt;             &lt;city&gt;Atlanta&lt;/city&gt;             &lt;country&gt;USA&lt;/country&gt;             &lt;line1&gt;123 Cross St&lt;/line1&gt;             &lt;line2&gt;SUITE 1&lt;/line2&gt;             &lt;postalCode&gt;53661&lt;/postalCode&gt;             &lt;state&gt;GA&lt;/state&gt;             &lt;type&gt;Work&lt;/type&gt;           &lt;/e&gt;         &lt;/details&gt;         &lt;type&gt;address&lt;/type&gt;       &lt;/e&gt;     &lt;/contactInformations&gt;     &lt;countryCode&gt;1&lt;/countryCode&gt;     &lt;dateOfBirth&gt;2000-12-12&lt;/dateOfBirth&gt;     &lt;gender&gt;male&lt;/gender&gt;     &lt;languageCode&gt;en_us&lt;/languageCode&gt;     &lt;name&gt;       &lt;firstName&gt;${GUID1_FIRST_NAME}&lt;/firstName&gt;       &lt;lastName&gt;${GUID1_LAST_NAME}&lt;/lastName&gt;       &lt;middleName&gt;Ross${currentDate}-${idref}&lt;/middleName&gt;       &lt;suffix&gt;Jr&lt;/suffix&gt;       &lt;title&gt;Ms&lt;/title&gt;     &lt;/name&gt;     &lt;traveler&gt;       &lt;dateOfBirth&gt;2001-12-12&lt;/dateOfBirth&gt;       &lt;gender&gt;M&lt;/gender&gt;       &lt;name&gt;         &lt;firstName&gt;${GUID1_FIRST_NAME}&lt;/firstName&gt;         &lt;lastName&gt;${GUID1_LAST_NAME}&lt;/lastName&gt;         &lt;middleName&gt;R&lt;/middleName&gt;       &lt;/name&gt;       &lt;redressNumber&gt;32452345ertew45634&lt;/redressNumber&gt;       &lt;travelerNumber&gt;678rty56&lt;/travelerNumber&gt;     &lt;/traveler&gt;   &lt;/profile&gt; &lt;/managedguest&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_PKG}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${PACKAGING_CONTEXT}/event/GOREG/ManagedGuestProfile/${GUID1.1}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get_GUID1XID" enabled="true">
          <stringProp name="dataSource">${ENV}</stringProp>
          <stringProp name="query">select exprnc_id  from extnl_txn_exprnc_lnk where extnl_acct_lnk_id  in(select extnl_acct_lnk_id from extnl_acct_lnk where ntv_id=&apos;${GUID1.1}&apos;)</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1XID</stringProp>
            <stringProp name="RegexExtractor.regex">EXPRNC_ID\n((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">12</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get_GUID1PID" enabled="true">
          <stringProp name="dataSource">${ENV}</stringProp>
          <stringProp name="query">select nge.NGE_CNONCL_REPRSNT_URI_REF_VL from extnl_acct_lnk lnk,extnl_txn_exprnc_lnk txn,nge_cnoncl_reprsnt nge where
lnk.ntv_id=&apos;${GUID1.1}&apos;
and lnk.extnl_acct_lnk_id=txn.extnl_acct_lnk_id
and txn.nge_cnoncl_reprsnt_id=nge.nge_cnoncl_reprsnt_id
and txn.lgcl_del_in=&apos;N&apos;
and lnk.lgcl_del_in=&apos;N&apos;
and nge.lgcl_del_in=&apos;N&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GUID1PID</stringProp>
            <stringProp name="RegexExtractor.regex">NGE_CNONCL_REPRSNT_URI_REF_VL\n((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">12</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Guest_Profile_by_GUID1.1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;guid=${GUID1.1}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Guest identifiers by SWID1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">firstName</stringProp>
            <stringProp name="JSONPATH">$.firstName</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1437608226">GuidOneFirstName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">firstName</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Guest_identifiers_by_GUID1.1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;guid=${GUID1.1}/identifiers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Guest identifiers by SWID1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">type1</stringProp>
            <stringProp name="JSONPATH">$.identifiers[0].type</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">type1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Guest_Profile_by_GUID1_XID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${GUID1XID}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Guest Profile by SWID1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">lastName</stringProp>
            <stringProp name="JSONPATH">$.lastName</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="290856030">GuidOneLastName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">lastName</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Precedence-Based_Guest_profile_By_GUID1.1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;guid=${GUID1.1}/profile?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">ageGroup</stringProp>
            <stringProp name="JSONPATH">$.ageGroup</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">ageGroup</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Precedence-Based_Guest_profile_By_GUID1_XID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${GUID1XID}/profile?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">age</stringProp>
            <stringProp name="JSONPATH">$.age</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">age</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Precedence-Based_Guest_profile_and_preferences_By_GUID1.1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;guid=${GUID1.1}/profile-preferences?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">ageGroup</stringProp>
            <stringProp name="JSONPATH">$.profile.ageGroup</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">ageGroup</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Precedence-Based_Guest_profile_and_preferences_By_GUID1_XID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${GUID1XID}/profile-preferences?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">lastName</stringProp>
            <stringProp name="JSONPATH">$.profile.lastName</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="290856030">GuidOneLastName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">lastName</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Managed_Guest_Profile_by_GUID1.1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/managed-guest/id;guid=${GUID1.1}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">ageGroup</stringProp>
            <stringProp name="JSONPATH">$.ageGroup</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">ageGroup</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Managed_Guest_Profile_by_GUID1XID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/managed-guest/id;xid=${GUID1XID}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">age</stringProp>
            <stringProp name="JSONPATH">$.age</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">age</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Managed_Guest_Profile_by_GUID1PID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/managed-guest-profile/${GUID1PID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">countryCode</stringProp>
            <stringProp name="JSONPATH">$.countryCode</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">countryCode</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Managed_Guest_Preferences_by_GUID1.1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/managed-guest/id;guid=${GUID1.1}/preferences?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">preferredLanguage</stringProp>
            <stringProp name="JSONPATH">$.communication.preferredLanguage</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">preferredLanguage</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Managed_Guest_Preferences_by_GUID1_XID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/managed-guest/id;xid=${GUID1XID}/preferences?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">preferredLanguage</stringProp>
            <stringProp name="JSONPATH">$.communication.preferredLanguage</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">preferredLanguage</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Managed_Guest_Profile_and_Preferences_for_a_set_of_Managed_Guest_Ids_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/managed-guest-profile-preferences?guid=${GUID1.1}&amp;managed-guest-ids=${GUID1XID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">itemLimit</stringProp>
            <stringProp name="JSONPATH">$.itemLimit</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">itemLimit</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete_ Managed_Guest_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/managed-guest/id;guid=${GUID1.1}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">{${SWID1}}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Registered Guest Profile" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1354097083000</longProp>
        <longProp name="ThreadGroup.end_time">1354097083000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Store a registered Guest Profile, Preferences and Provides the respective data(Profile,Preferences)</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="VAR" elementType="Argument">
              <stringProp name="Argument.name">VAR</stringProp>
              <stringProp name="Argument.value">${__Random(100000,999999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="VAR2" elementType="Argument">
              <stringProp name="Argument.name">VAR2</stringProp>
              <stringProp name="Argument.value">${__Random(10000,99999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="VAR3" elementType="Argument">
              <stringProp name="Argument.name">VAR3</stringProp>
              <stringProp name="Argument.value">${__Random(1000,9999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() + 5); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() + 60); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="formattedCurrentDate" elementType="Argument">
              <stringProp name="Argument.name">formattedCurrentDate</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date-of-birth" elementType="Argument">
              <stringProp name="Argument.name">date-of-birth</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() -7300); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="108403163">resId</stringProp>
            <stringProp name="-2097609757">pastPassengerId</stringProp>
            <stringProp name="2068307">CID1</stringProp>
            <stringProp name="2068308">CID2</stringProp>
            <stringProp name="2068309">CID3</stringProp>
            <stringProp name="2068310">CID4</stringProp>
            <stringProp name="2068311">CID5</stringProp>
            <stringProp name="-1869122684">xpassId</stringProp>
            <stringProp name="91958580">gxpLinkId</stringProp>
            <stringProp name="463215266">diningResId</stringProp>
            <stringProp name="806959153">LocatorId</stringProp>
            <stringProp name="1674314293">reservationNumber</stringProp>
            <stringProp name="540171229">xbandRequestId</stringProp>
            <stringProp name="2024873128">xbandId</stringProp>
            <stringProp name="-604903692">externalNumber</stringProp>
            <stringProp name="949117682">secureId</stringProp>
            <stringProp name="-556542535">shortRangeTag</stringProp>
            <stringProp name="-2145445959">longRangeTag</stringProp>
            <stringProp name="-1738687551">xbandOwnerId</stringProp>
            <stringProp name="526678755">levelNGuestLinkID</stringProp>
            <stringProp name="-1898527617">levelNLinkID</stringProp>
            <stringProp name="-749662817">admissionEntitlementId</stringProp>
            <stringProp name="-157156091">scheduleItemId</stringProp>
            <stringProp name="-62640877">enterpriseContentId</stringProp>
            <stringProp name="-967903157">gatedAdmissionId</stringProp>
            <stringProp name="1152906891">DMEReservationId</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1330549608">
              <stringProp name="295733900">10${VAR}</stringProp>
              <stringProp name="194971942">9${VAR}</stringProp>
              <stringProp name="1684877086">1${VAR}</stringProp>
              <stringProp name="-1722586529">2${VAR}</stringProp>
              <stringProp name="-835082848">3${VAR}</stringProp>
              <stringProp name="52420833">4${VAR}</stringProp>
              <stringProp name="939924514">5${VAR}</stringProp>
              <stringProp name="691579914">1${VAR2}</stringProp>
              <stringProp name="-1860577047">2${VAR2}</stringProp>
              <stringProp name="-117766712">3${VAR2}</stringProp>
              <stringProp name="1749160706">9${VAR2}</stringProp>
              <stringProp name="-1335403799">123${VAR2}</stringProp>
              <stringProp name="1749160706">9${VAR2}</stringProp>
              <stringProp name="1193219419">${VAR2}</stringProp>
              <stringProp name="110081408">${VAR3}${VAR3}${VAR3}${VAR3}</stringProp>
              <stringProp name="1437517895">${VAR3}ABC${VAR3}XYZ</stringProp>
              <stringProp name="271133945">A${VAR3}Z${VAR3}</stringProp>
              <stringProp name="467647419">A${VAR2}Z${VAR2}</stringProp>
              <stringProp name="-1169292672">${VAR3}${VAR3}-${VAR3}-${VAR3}-${VAR3}-A${VAR3}XYZ${VAR3}</stringProp>
              <stringProp name="587763000">ABCDEF${VAR2}${VAR2}${VAR2}</stringProp>
              <stringProp name="-187083872">${VAR2}${VAR2}</stringProp>
              <stringProp name="587763031">ABCDEF${VAR2}${VAR2}${VAR3}</stringProp>
              <stringProp name="-187083841">${VAR2}${VAR3}</stringProp>
              <stringProp name="-1994538335">${VAR3}${VAR2}</stringProp>
              <stringProp name="-1994538304">${VAR3}${VAR3}</stringProp>
              <stringProp name="1588780251">${VAR2}${VAR3}${VAR3}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Store_Registered_Guest_Preferences_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;preferences&gt;   &lt;swid&gt;{${SWID1}}&lt;/swid&gt;   &lt;DiningPreferences&gt;     &lt;e&gt;       &lt;cuisines&gt;         &lt;e&gt;American&lt;/e&gt;         &lt;e&gt;Seafood&lt;/e&gt;       &lt;/cuisines&gt;       &lt;diningexperiences&gt;         &lt;e&gt;casual dining&lt;/e&gt;       &lt;/diningexperiences&gt;       &lt;origin&gt;WDW&lt;/origin&gt;     &lt;/e&gt;   &lt;/DiningPreferences&gt;   &lt;attractionPreferences&gt;     &lt;e&gt;       &lt;agegroups&gt;         &lt;e&gt;All ages&lt;/e&gt;       &lt;/agegroups&gt;       &lt;attrationTypes&gt;         &lt;e&gt;Live Theater&lt;/e&gt;       &lt;/attrationTypes&gt;       &lt;origin&gt;DLR&lt;/origin&gt;     &lt;/e&gt;   &lt;/attractionPreferences&gt;   &lt;avatarId&gt;121216&lt;/avatarId&gt;   &lt;communicationPreferences&gt;     &lt;preferredLanguage&gt;en&lt;/preferredLanguage&gt;   &lt;/communicationPreferences&gt;   &lt;favoriteCharacterId&gt;90004104&lt;/favoriteCharacterId&gt;   &lt;messagingPreferences&gt;     &lt;messagingPreferencesForm&gt;       &lt;disneyFamilyOfBusinessNews&gt;         &lt;multi&gt;true&lt;/multi&gt;         &lt;options&gt;           &lt;e&gt;             &lt;text&gt;Phone Message&lt;/text&gt;             &lt;value&gt;SMS&lt;/value&gt;           &lt;/e&gt;           &lt;e&gt;             &lt;text&gt;Internet Email&lt;/text&gt;             &lt;value&gt;EMAIL&lt;/value&gt;           &lt;/e&gt;         &lt;/options&gt;         &lt;type&gt;select&lt;/type&gt;       &lt;/disneyFamilyOfBusinessNews&gt;       &lt;familyAndFriendsNotifications&gt;         &lt;multi&gt;true&lt;/multi&gt;         &lt;options&gt;           &lt;e&gt;             &lt;text&gt;Phone Message&lt;/text&gt;             &lt;value&gt;SMS&lt;/value&gt;           &lt;/e&gt;           &lt;e&gt;             &lt;checked&gt;true&lt;/checked&gt;             &lt;text&gt;Internet Email&lt;/text&gt;             &lt;value&gt;EMAIL&lt;/value&gt;           &lt;/e&gt;         &lt;/options&gt;         &lt;type&gt;select&lt;/type&gt;       &lt;/familyAndFriendsNotifications&gt;       &lt;itineraryChanges&gt;         &lt;multi&gt;true&lt;/multi&gt;         &lt;options&gt;           &lt;e&gt;             &lt;checked&gt;true&lt;/checked&gt;             &lt;text&gt;Phone Message&lt;/text&gt;             &lt;value&gt;SMS&lt;/value&gt;           &lt;/e&gt;           &lt;e&gt;             &lt;checked&gt;true&lt;/checked&gt;             &lt;text&gt;Internet Email&lt;/text&gt;             &lt;value&gt;EMAIL&lt;/value&gt;           &lt;/e&gt;         &lt;/options&gt;         &lt;type&gt;select&lt;/type&gt;       &lt;/itineraryChanges&gt;       &lt;itineraryReminders&gt;         &lt;multi&gt;true&lt;/multi&gt;         &lt;options&gt;           &lt;e&gt;             &lt;checked&gt;true&lt;/checked&gt;             &lt;text&gt;Phone Message&lt;/text&gt;             &lt;value&gt;SMS&lt;/value&gt;           &lt;/e&gt;           &lt;e&gt;             &lt;checked&gt;true&lt;/checked&gt;             &lt;text&gt;Phone Message&lt;/text&gt;             &lt;value&gt;EMAIL&lt;/value&gt;           &lt;/e&gt;         &lt;/options&gt;         &lt;type&gt;select&lt;/type&gt;       &lt;/itineraryReminders&gt;       &lt;offers&gt;         &lt;multi&gt;true&lt;/multi&gt;         &lt;options&gt;           &lt;e&gt;             &lt;checked&gt;true&lt;/checked&gt;             &lt;text&gt;Phone Message&lt;/text&gt;             &lt;value&gt;SMS&lt;/value&gt;           &lt;/e&gt;           &lt;e&gt;             &lt;text&gt;Internet Email&lt;/text&gt;             &lt;value&gt;EMAIL&lt;/value&gt;           &lt;/e&gt;         &lt;/options&gt;         &lt;type&gt;select&lt;/type&gt;       &lt;/offers&gt;       &lt;weeklyDisneyInsiderNewsletter&gt;         &lt;multi&gt;true&lt;/multi&gt;         &lt;options&gt;           &lt;e&gt;             &lt;text&gt;Phone Message&lt;/text&gt;             &lt;value&gt;SMS&lt;/value&gt;           &lt;/e&gt;           &lt;e&gt;             &lt;text&gt;Internet Email&lt;/text&gt;             &lt;value&gt;EMAIL&lt;/value&gt;           &lt;/e&gt;         &lt;/options&gt;         &lt;type&gt;select&lt;/type&gt;       &lt;/weeklyDisneyInsiderNewsletter&gt;     &lt;/messagingPreferencesForm&gt;   &lt;/messagingPreferences&gt;   &lt;wdw-subscriptions&gt;     &lt;e&gt;       &lt;origin&gt;WDW1&lt;/origin&gt;       &lt;listCode&gt;         &lt;e&gt;WDPRNews&lt;/e&gt;       &lt;/listCode&gt;     &lt;/e&gt;   &lt;/wdw-subscriptions&gt; &lt;/preferences&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_PKG}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${PACKAGING_CONTEXT}/event/GOREG/REGISTEREDPREFERENCES/%7B${SWID1}%7D</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Store registered profile Preferences in SF</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Guest_Profile_by_SWID1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID1}%7D/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Guest identifiers by SWID1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">firstName</stringProp>
            <stringProp name="JSONPATH">$.firstName</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253947436">SwidOneFirstName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">firstName</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Guest_identifiers_by_SWID1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID1}%7D/identifiers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Guest identifiers by SWID1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SWID1_XID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">SWID1_XID</stringProp>
            <stringProp name="RegexExtractor.regex">/assembly/guest/(.+?)/profile</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">invalid_logged_in_xid</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">type1</stringProp>
            <stringProp name="JSONPATH">$.identifiers[0].type</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">type1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Guest_Profile_by_SWID1_XID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="test" elementType="HTTPFileArg">
                <stringProp name="File.path">test</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Provide Guest Profile by SWID1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">lastName</stringProp>
            <stringProp name="JSONPATH">$.lastName</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="190491304">SwidOneLastName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">lastName</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Precedence-Based_Guest_profile_By_SWID1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID1}%7D/profile?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">countryCode</stringProp>
            <stringProp name="JSONPATH">$.countryCode</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">countryCode</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Precedence-Based_Guest_profile_By_SWID1_XID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/profile?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">countryCode</stringProp>
            <stringProp name="JSONPATH">$.countryCode</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2407815">NULL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">countryCode</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Precedence-Based_Guest_profile_and_preferences_By_SWID1_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/id;swid=%7B${SWID1}%7D/profile-preferences?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">firstName</stringProp>
            <stringProp name="JSONPATH">$.profile.firstName</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253947436">SwidOneFirstName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">firstName</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide_Precedence-Based_Guest_profile_and_preferences_By_SWID1_XID_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/profile-preferences?one-source-details=no</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">lastName</stringProp>
            <stringProp name="JSONPATH">$.lastName</stringProp>
            <stringProp name="DEFAULT">NOT_FOUND</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-253947436">SwidOneFirstName</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">firstName</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="PBP" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438241340000</longProp>
        <longProp name="ThreadGroup.end_time">1438241340000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="VAR" elementType="Argument">
              <stringProp name="Argument.name">VAR</stringProp>
              <stringProp name="Argument.value">${__Random(100000,999999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="VAR2" elementType="Argument">
              <stringProp name="Argument.name">VAR2</stringProp>
              <stringProp name="Argument.value">${__Random(10000,99999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="VAR3" elementType="Argument">
              <stringProp name="Argument.name">VAR3</stringProp>
              <stringProp name="Argument.value">${__Random(1000,9999)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() + 5); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() + 60); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="formattedCurrentDate" elementType="Argument">
              <stringProp name="Argument.name">formattedCurrentDate</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="date-of-birth" elementType="Argument">
              <stringProp name="Argument.name">date-of-birth</stringProp>
              <stringProp name="Argument.value">${__javaScript(var d=new Date();d.setDate(d.getDate() -7300); var date=d.getDate(); var month=d.getMonth()+1; $DATE=d.getFullYear() + &quot;-&quot; + (month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; + (date&lt;10?&quot;0&quot;+date:date);,DATE)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="108403163">resId</stringProp>
            <stringProp name="-2097609757">pastPassengerId</stringProp>
            <stringProp name="2068307">CID1</stringProp>
            <stringProp name="2068308">CID2</stringProp>
            <stringProp name="2068309">CID3</stringProp>
            <stringProp name="2068310">CID4</stringProp>
            <stringProp name="2068311">CID5</stringProp>
            <stringProp name="-1869122684">xpassId</stringProp>
            <stringProp name="91958580">gxpLinkId</stringProp>
            <stringProp name="463215266">diningResId</stringProp>
            <stringProp name="806959153">LocatorId</stringProp>
            <stringProp name="1674314293">reservationNumber</stringProp>
            <stringProp name="540171229">xbandRequestId</stringProp>
            <stringProp name="2024873128">xbandId</stringProp>
            <stringProp name="-604903692">externalNumber</stringProp>
            <stringProp name="949117682">secureId</stringProp>
            <stringProp name="-556542535">shortRangeTag</stringProp>
            <stringProp name="-2145445959">longRangeTag</stringProp>
            <stringProp name="-1738687551">xbandOwnerId</stringProp>
            <stringProp name="526678755">levelNGuestLinkID</stringProp>
            <stringProp name="-1898527617">levelNLinkID</stringProp>
            <stringProp name="-749662817">admissionEntitlementId</stringProp>
            <stringProp name="-157156091">scheduleItemId</stringProp>
            <stringProp name="-62640877">enterpriseContentId</stringProp>
            <stringProp name="-967903157">gatedAdmissionId</stringProp>
            <stringProp name="1152906891">DMEReservationId</stringProp>
            <stringProp name="-1593197417">das-link-id</stringProp>
            <stringProp name="-664971438">DASEntitlementId</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="200238233">
              <stringProp name="295733900">10${VAR}</stringProp>
              <stringProp name="194971942">9${VAR}</stringProp>
              <stringProp name="1684877086">1${VAR}</stringProp>
              <stringProp name="-1722586529">2${VAR}</stringProp>
              <stringProp name="-835082848">3${VAR}</stringProp>
              <stringProp name="52420833">4${VAR}</stringProp>
              <stringProp name="939924514">5${VAR}</stringProp>
              <stringProp name="691579914">1${VAR2}</stringProp>
              <stringProp name="-1860577047">2${VAR2}</stringProp>
              <stringProp name="-117766712">3${VAR2}</stringProp>
              <stringProp name="1749160706">9${VAR2}</stringProp>
              <stringProp name="-1335403799">123${VAR2}</stringProp>
              <stringProp name="1749160706">9${VAR2}</stringProp>
              <stringProp name="1193219419">${VAR2}</stringProp>
              <stringProp name="110081408">${VAR3}${VAR3}${VAR3}${VAR3}</stringProp>
              <stringProp name="1437517895">${VAR3}ABC${VAR3}XYZ</stringProp>
              <stringProp name="271133945">A${VAR3}Z${VAR3}</stringProp>
              <stringProp name="467647419">A${VAR2}Z${VAR2}</stringProp>
              <stringProp name="-1169292672">${VAR3}${VAR3}-${VAR3}-${VAR3}-${VAR3}-A${VAR3}XYZ${VAR3}</stringProp>
              <stringProp name="587763000">ABCDEF${VAR2}${VAR2}${VAR2}</stringProp>
              <stringProp name="-187083872">${VAR2}${VAR2}</stringProp>
              <stringProp name="587763031">ABCDEF${VAR2}${VAR2}${VAR3}</stringProp>
              <stringProp name="-187083841">${VAR2}${VAR3}</stringProp>
              <stringProp name="-1994538335">${VAR3}${VAR2}</stringProp>
              <stringProp name="-1994538304">${VAR3}${VAR3}</stringProp>
              <stringProp name="1588780251">${VAR2}${VAR3}${VAR3}</stringProp>
              <stringProp name="1407622529">1${VAR}2${VAR}</stringProp>
              <stringProp name="14560223">2${VAR}1${VAR}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1Park Admission Entitlement" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;Command xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;PayloadMessage.xsd&quot;&gt;   &lt;Header&gt;     &lt;ReferenceNumber&gt;${VAR2}&lt;/ReferenceNumber&gt;     &lt;MessageType&gt;N&lt;/MessageType&gt;     &lt;MessageSubType /&gt;   &lt;/Header&gt;   &lt;Entitlement&gt;     &lt;Item&gt;1&lt;/Item&gt;     &lt;ItemStatus&gt;0&lt;/ItemStatus&gt;     &lt;TicketType&gt;458&lt;/TicketType&gt;     &lt;TicketCode&gt;109171&lt;/TicketCode&gt;     &lt;Price&gt;0.000&lt;/Price&gt;     &lt;Tax&gt;0.000&lt;/Tax&gt;     &lt;Ticket&gt;       &lt;TDSSN&gt;         &lt;Site&gt;XMK&lt;/Site&gt;         &lt;Station&gt;CAS002&lt;/Station&gt;         &lt;Date&gt;14-07-05&lt;/Date&gt;         &lt;TicketId&gt;1&lt;/TicketId&gt;       &lt;/TDSSN&gt;       &lt;TCOD&gt;${admissionEntitlementId}&lt;/TCOD&gt;       &lt;BarCode&gt;DJG3F0YWA002VUU3E&lt;/BarCode&gt;       &lt;MagCode&gt;KFSSR3POIRZSOPONLYOA1COOO6OPOOOOOOOSFLSR3POIRZSOPONLYOA1COOO6OPOOOOOOOB&lt;/MagCode&gt;     &lt;/Ticket&gt;     &lt;RemainingValue&gt;0.000&lt;/RemainingValue&gt;     &lt;VoidCode&gt;0&lt;/VoidCode&gt;     &lt;Validity&gt;       &lt;StartDate&gt;${startDate}&lt;/StartDate&gt;       &lt;EndDate&gt;${endDate}&lt;/EndDate&gt;       &lt;ExpirationDate&gt;2012-12-31&lt;/ExpirationDate&gt;     &lt;/Validity&gt;     &lt;Usages&gt;       &lt;Item&gt;1&lt;/Item&gt;       &lt;UniqueReference&gt;1&lt;/UniqueReference&gt;       &lt;UsageType&gt;1&lt;/UsageType&gt;       &lt;SiteNumber&gt;50&lt;/SiteNumber&gt;       &lt;Gate&gt;1&lt;/Gate&gt;       &lt;Date&gt;2012-06-01&lt;/Date&gt;       &lt;Time&gt;12:47:08&lt;/Time&gt;       &lt;PerformanceId&gt;3&lt;/PerformanceId&gt;     &lt;/Usages&gt;     &lt;TicketAttribute&gt;0&lt;/TicketAttribute&gt;     &lt;BiometricLevel&gt;3&lt;/BiometricLevel&gt;     &lt;TransactionDSSN&gt;       &lt;Site&gt;XMK&lt;/Site&gt;       &lt;Station&gt;CAS002&lt;/Station&gt;       &lt;Date&gt;${formattedCurrentDate}&lt;/Date&gt;       &lt;TransactionId&gt;3&lt;/TransactionId&gt;     &lt;/TransactionDSSN&gt;     &lt;TransactionCOD&gt;${admissionEntitlementId}&lt;/TransactionCOD&gt;     &lt;GroupQuantity&gt;0&lt;/GroupQuantity&gt;     &lt;AlreadyUsed&gt;0&lt;/AlreadyUsed&gt;     &lt;AssociationInfo&gt;       &lt;AssociationId&gt;25&lt;/AssociationId&gt;       &lt;MemberId&gt;3412055&lt;/MemberId&gt;       &lt;DemographicData&gt;         &lt;Field&gt;           &lt;FieldId&gt;3&lt;/FieldId&gt;           &lt;FieldType&gt;0&lt;/FieldType&gt;           &lt;FieldValue&gt;ABCDE&lt;/FieldValue&gt;         &lt;/Field&gt;         &lt;Field&gt;           &lt;FieldId&gt;4&lt;/FieldId&gt;           &lt;FieldType&gt;0&lt;/FieldType&gt;           &lt;FieldValue&gt;HIJKL&lt;/FieldValue&gt;         &lt;/Field&gt;       &lt;/DemographicData&gt;       &lt;NumberOfGuests&gt;0&lt;/NumberOfGuests&gt;     &lt;/AssociationInfo&gt;     &lt;Account&gt;       &lt;AccountId&gt;${VAR2}-1&lt;/AccountId&gt;       &lt;Status&gt;A&lt;/Status&gt;     &lt;/Account&gt;     &lt;AccessArea&gt;       &lt;AccessAreaId&gt;1&lt;/AccessAreaId&gt;       &lt;AccessAreaCode&gt;WECMG&lt;/AccessAreaCode&gt;       &lt;EntryType&gt;1&lt;/EntryType&gt;       &lt;EntryQty&gt;0&lt;/EntryQty&gt;       &lt;ReentryType&gt;1&lt;/ReentryType&gt;       &lt;ReentryQty&gt;0&lt;/ReentryQty&gt;       &lt;UsedQty&gt;0&lt;/UsedQty&gt;     &lt;/AccessArea&gt;     &lt;RedemptionTotal&gt;0&lt;/RedemptionTotal&gt;     &lt;RedemptionUsed&gt;0&lt;/RedemptionUsed&gt;     &lt;PurchaseDate&gt;${formattedCurrentDate}&lt;/PurchaseDate&gt;     &lt;NoCharge&gt;1&lt;/NoCharge&gt;     &lt;EntitlementType&gt;1&lt;/EntitlementType&gt;     &lt;OrderId&gt;1&lt;/OrderId&gt;   &lt;/Entitlement&gt; &lt;/Command&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_PKG}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${PACKAGING_CONTEXT}/event/ATS/AdmissionEntitlement/${admissionEntitlementId}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="SWID1_XID" enabled="true">
          <stringProp name="dataSource">${ENV}</stringProp>
          <stringProp name="query">select exprnc_id from extnl_txn_exprnc_lnk lnk,extnl_txn txn 
where lnk.extnl_txn_id=txn.extnl_txn_id
and txn.ntv_id=&apos;${admissionEntitlementId}&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">SWID1_XID</stringProp>
            <stringProp name="RegexExtractor.regex">EXPRNC_ID\n((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">12</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Precedence Based Guest profile By XID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">guestType1</stringProp>
            <stringProp name="JSONPATH">$.guestType</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="480407576">ATS Guest</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">guestType1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2SF_StoreDASEntitlement_END" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{     &quot;entitlementId&quot;: &quot;${DASEntitlementId}&quot;,     &quot;startDate&quot;: &quot;${startDate}T22:15:00Z&quot;,     &quot;endDate&quot;: &quot;${endDate}T22:15:00Z&quot;,     &quot;status&quot;: &quot;ACTIVE&quot;,     &quot;terms-conditions-version&quot;: &quot;v1&quot;,     &quot;participants&quot;: [         {             &quot;firstName&quot;: &quot;${SWID1_firstName}&quot;,             &quot;middleName&quot;: &quot;T&quot;,             &quot;lastName&quot;: &quot;${SWID1_lastName}&quot;,             &quot;suffix&quot;: &quot;II&quot;,             &quot;title&quot;: &quot;Mr.&quot;,             &quot;isGWD&quot;: true,             &quot;under3&quot;: false,             &quot;headShotOptOut&quot;: false,             &quot;guestIdType&quot;: &quot;xid&quot;,             &quot;guestIdValue&quot;: &quot;${SWID1_XID}&quot;,             &quot;das-link-id&quot;: &quot;${das-link-id}&quot;         }     ] }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/das-entitlement/${DASEntitlementId}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="" elementType="HTTPFileArg">
                <stringProp name="File.path"></stringProp>
                <stringProp name="File.paramname">accept</stringProp>
                <stringProp name="File.mimetype"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">StoerDAS Entitlement in Assembly</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-CAST-ID</stringProp>
                <stringProp name="Header.value">12345</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Precedence Based Guest profile By XID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">guestType2</stringProp>
            <stringProp name="JSONPATH">$.guestType</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1737394146">dasGuest</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">guestType2</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3Create Accomodation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;ns7:retrieveAccommodationResponse xmlns=&quot;http://valueobjects.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns2=&quot;http://guest.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns3=&quot;http://accommodation.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns4=&quot;http://productbundle.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns5=&quot;http://salesorder.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns6=&quot;http://organization.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns7=&quot;http://service.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns8=&quot;http://travelplan.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns9=&quot;http://salesorderitem.salesorder.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns10=&quot;http://dining.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns11=&quot;http://activity.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns12=&quot;http://reservableresource.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns13=&quot;http://cruise.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns14=&quot;http://airtransportation.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns15=&quot;http://diningplan.dining.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns16=&quot;http://gatedadmission.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns17=&quot;http://groundtransfer.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns18=&quot;http://insurance.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns19=&quot;http://tableservicedining.dining.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns20=&quot;http://dinnershow.dining.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns21=&quot;http://eventdining.dining.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns22=&quot;http://vehiclerental.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns23=&quot;http://genericproduct.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns24=&quot;http://experiencemedia.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns25=&quot;http://exceptions.travelplansalesorderv1.bussvcs.wdpr.com/&quot; xmlns:ns26=&quot;http://payment.folio.travelplansalesorderv1.bussvcs.wdpr.com/&quot;&gt;   &lt;ns7:retrieveAccommodationResponse&gt;     &lt;guests id=&quot;${VAR2}-1&quot; guestReferenceId=&quot;${VAR2}-1&quot; atLeastThisAge=&quot;0&quot; doNotMail=&quot;false&quot; doNotPhone=&quot;false&quot;&gt;       &lt;ns2:guestName prefix=&quot;Dr.&quot; firstName=&quot;${SWID1_firstName}&quot; lastName=&quot;${SWID1_lastName}&quot; /&gt;       &lt;ns7:externalReferenceIds id=&quot;${SWID1_XID}&quot; type=&quot;xid&quot;/&gt;       &lt;ns2:postalAddresses addressId=&quot;139346137&quot; addressLine1=&quot;Test&quot; city=&quot;Orlando&quot; stateCode=&quot;FL&quot; regionName=&quot;Florida&quot; zipCode=&quot;56789&quot; country=&quot;USA&quot; preferred=&quot;false&quot; addressType=&quot;PERSONAL&quot; doNotMail=&quot;false&quot;/&gt;       &lt;ns2:telecomAddresses phoneId=&quot;139346138&quot; number=&quot;${VAR2}&quot; preferred=&quot;false&quot; phoneTechType=&quot;HANDSET&quot; extension=&quot;0&quot; doNotPhone=&quot;false&quot;&gt;     &lt;/ns2:telecomAddresses&gt;   &lt;/guests&gt;     &lt;accommodationDetails id=&quot;${reservationNumber}&quot; enterpriseFacilityId=&quot;80010389&quot; facilityName=&quot;Disney&apos;s Beach Club Resort&quot; resortCode=&quot;1W&quot; roomTypeCode=&quot;WA&quot; roomTypeDescription=&quot;Disney&apos;s Beach Club Resort-Standard View&quot; arrivalDate=&quot;${startDate}&quot; departureDate=&quot;${endDate}&quot; lateCheckOut=&quot;false&quot; bookingDate=&quot;${formattedCurrentDate}&quot; status=&quot;Not Arrived&quot; specialNeedsRequested=&quot;false&quot;&gt;       &lt;ns3:accommodationVacationClubRate type=&quot;Non Member Cash&quot; /&gt;       &lt;ns3:salesOrderItemGuests guestReferenceId=&quot;${VAR2}-1&quot; ageType=&quot;ADULT&quot; /&gt;     &lt;/accommodationDetails&gt;     &lt;packageSummary id=&quot;108760&quot; code=&quot;XS6&quot; description=&quot;R Room Only&quot; planType=&quot;Room Only&quot; roomOnly=&quot;true&quot; wholesaler=&quot;false&quot; resortSpecialReservation=&quot;false&quot; productId=&quot;22926&quot; /&gt;     &lt;salesOrderSummary id=&quot;${VAR2}&quot; status=&quot;Booked&quot; sourceAccountingCenterId=&quot;2&quot; arrivalDate=&quot;${startDate}&quot; depatureDate=&quot;${endDate}&quot; vipLevel=&quot;0&quot; currencyCode=&quot;USD&quot; contactName=&quot;Wsbcfifteen&quot; primaryGuestReferenceId=&quot;${VAR2}-1&quot; guaranteed=&quot;false&quot;&gt;       &lt;ns5:creationHistory createdBy=&quot;test2100&quot; creationDate=&quot;${formattedCurrentDate}T09:45:52&quot;&gt;         &lt;modificationHistories updatedBy=&quot;test2100&quot; updatedDate=&quot;${formattedCurrentDate}T09:45:52&quot; type=&quot;Booked&quot; /&gt;         &lt;modificationHistories updatedBy=&quot;FftDeNoSho&quot; updatedDate=&quot;${formattedCurrentDate}T02:18:03&quot; type=&quot;Not Arrived&quot; /&gt;       &lt;/ns5:creationHistory&gt;       &lt;ns5:travelAgency id=&quot;48459705&quot; name=&quot;System Support Test Agency-MOD&quot;&gt;         &lt;ns6:emailAddresses emailAddress=&quot;WDW.TRAVEL.SYSTEM.SUPPORT@DISNEY.COM&quot; preferred=&quot;false&quot; /&gt;         &lt;ns6:telecomAddresses number=&quot;4073541856&quot; preferred=&quot;false&quot; phoneTechType=&quot;FAX&quot; /&gt;         &lt;ns6:telecomAddresses number=&quot;4078283232&quot; preferred=&quot;false&quot; phoneTechType=&quot;HANDSET&quot; /&gt;         &lt;ns6:postalAddresses addressLine1=&quot;PO Box 10375&quot; city=&quot;Orlando&quot; stateCode=&quot;FL&quot; regionName=&quot;Florida&quot; zipCode=&quot;32830-0375&quot; preferred=&quot;false&quot; /&gt;       &lt;/ns5:travelAgency&gt;     &lt;/salesOrderSummary&gt;   &lt;/ns7:retrieveAccommodationResponse&gt;&lt;/ns7:retrieveAccommodationResponse&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_PKG}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${PACKAGING_CONTEXT}/ResortReservationEvent/DREAMS/Accommodation/${reservationNumber}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Precedence Based Guest profile By XID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">guestType3</stringProp>
            <stringProp name="JSONPATH">$.guestType</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="448241545">transactional</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">guestType3</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9Associate Guest Identifier_DME" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{     &quot;identifier-type&quot;: &quot;dcl-link-id&quot;,     &quot;identifier-value&quot;: &quot;${VAR2}&quot; }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/identifiers</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4Store DME Reservation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;DMEReservation&gt;   &lt;DMEReservationId&gt;${DMEReservationId}&lt;/DMEReservationId&gt;   &lt;ReservationStartDate&gt;${startDate}T09:00:00Z&lt;/ReservationStartDate&gt;   &lt;ReservationEndDate&gt;${endDate}T17:00:00Z&lt;/ReservationEndDate&gt;   &lt;CreateDateTime&gt;${formattedCurrentDate}T05:00:00Z&lt;/CreateDateTime&gt;   &lt;GroupName&gt;Takamiya&apos;s family&lt;/GroupName&gt;   &lt;GuestList&gt;     &lt;Guest&gt;       &lt;DMEGuestId&gt;${VAR2}&lt;/DMEGuestId&gt;       &lt;ExternalSystemIdentifierList&gt;         &lt;ExternalSystemIdentifier&gt;           &lt;SystemName&gt;Seaware&lt;/SystemName&gt;           &lt;ExternalIdName&gt;dcl-link-id&lt;/ExternalIdName&gt;           &lt;ExternalIdValue&gt;${VAR2}&lt;/ExternalIdValue&gt;         &lt;/ExternalSystemIdentifier&gt;       &lt;/ExternalSystemIdentifierList&gt;       &lt;PrimaryGuestIndicator&gt;true&lt;/PrimaryGuestIndicator&gt;       &lt;LastName&gt;${SWID1_lastName}&lt;/LastName&gt;       &lt;FirstName&gt;${SWID1_firstName}&lt;/FirstName&gt;       &lt;Title&gt;Mrs&lt;/Title&gt;       &lt;SpecialRequestList&gt;         &lt;SpecialRequest&gt;           &lt;specialRequestCode&gt;G_LIFT&lt;/specialRequestCode&gt;           &lt;specialRequestDescription&gt;wheelchair Lift&lt;/specialRequestDescription&gt;         &lt;/SpecialRequest&gt;       &lt;/SpecialRequestList&gt;       &lt;TransferList&gt;         &lt;Transfer&gt;           &lt;TransferId&gt;${VAR2}1&lt;/TransferId&gt;         &lt;/Transfer&gt;         &lt;Transfer&gt;           &lt;TransferId&gt;${VAR2}2&lt;/TransferId&gt;         &lt;/Transfer&gt;       &lt;/TransferList&gt;     &lt;/Guest&gt;   &lt;/GuestList&gt;   &lt;TransferList&gt;     &lt;Transfer&gt;       &lt;TransferId&gt;${VAR2}1&lt;/TransferId&gt;       &lt;ExternalSystemIdentifierList&gt;         &lt;ExternalSystemIdentifier&gt;           &lt;SystemName&gt;DREAMS&lt;/SystemName&gt;           &lt;ExternalIdName&gt;TravelPlanSegmentId&lt;/ExternalIdName&gt;           &lt;ExternalIdValue&gt;${VAR2}&lt;/ExternalIdValue&gt;         &lt;/ExternalSystemIdentifier&gt;       &lt;/ExternalSystemIdentifierList&gt;       &lt;TransferDate&gt;${startDate}T11:00:00Z&lt;/TransferDate&gt;       &lt;TransferType&gt;Airport-Resort&lt;/TransferType&gt;       &lt;DropoffEnterpriseFacilityId&gt;${VAR2}&lt;/DropoffEnterpriseFacilityId&gt;       &lt;OverridePickupLocationIndicator&gt;true&lt;/OverridePickupLocationIndicator&gt;       &lt;OverrideDropoffLocationIndicator&gt;false&lt;/OverrideDropoffLocationIndicator&gt;       &lt;AirSegmentList&gt;         &lt;AirSegment&gt;           &lt;AirSegmentId&gt;${VAR2}&lt;/AirSegmentId&gt;           &lt;Direction&gt;Inbound&lt;/Direction&gt;           &lt;DepartureDate&gt;${endDate}T17:00:00Z&lt;/DepartureDate&gt;           &lt;AirlineCode&gt;DL&lt;/AirlineCode&gt;           &lt;AirlineName&gt;Delta&lt;/AirlineName&gt;           &lt;FlightNumber&gt;${VAR2}&lt;/FlightNumber&gt;           &lt;ArrivalGatewayCode&gt;MCO&lt;/ArrivalGatewayCode&gt;           &lt;ArrivalGatewayName&gt;Orlando International Airport&lt;/ArrivalGatewayName&gt;         &lt;/AirSegment&gt;       &lt;/AirSegmentList&gt;       &lt;GuestList&gt;         &lt;Guest&gt;           &lt;DMEGuestId&gt;${VAR2}&lt;/DMEGuestId&gt;         &lt;/Guest&gt;       &lt;/GuestList&gt;     &lt;/Transfer&gt;     &lt;Transfer&gt;       &lt;TransferId&gt;${VAR2}2&lt;/TransferId&gt;       &lt;ExternalSystemIdentifierList&gt;         &lt;ExternalSystemIdentifier&gt;           &lt;SystemName&gt;DREAMS&lt;/SystemName&gt;           &lt;ExternalIdName&gt;TravelPlanSegmentId&lt;/ExternalIdName&gt;           &lt;ExternalIdValue&gt;${VAR2}1&lt;/ExternalIdValue&gt;         &lt;/ExternalSystemIdentifier&gt;       &lt;/ExternalSystemIdentifierList&gt;       &lt;TransferDate&gt;${startDate}T12:00:00Z&lt;/TransferDate&gt;       &lt;TransferType&gt;Resort-Airport&lt;/TransferType&gt;       &lt;PickupEnterpriseFacilityId&gt;${VAR2}&lt;/PickupEnterpriseFacilityId&gt;       &lt;OverridePickupLocationIndicator&gt;false&lt;/OverridePickupLocationIndicator&gt;       &lt;OverrideDropoffLocationIndicator&gt;true&lt;/OverrideDropoffLocationIndicator&gt;       &lt;AirSegmentList&gt;         &lt;AirSegment&gt;           &lt;AirSegmentId&gt;${VAR2}&lt;/AirSegmentId&gt;           &lt;Direction&gt;Outbound&lt;/Direction&gt;           &lt;DepartureDate&gt;${endDate}T17:00:00Z&lt;/DepartureDate&gt;           &lt;AirlineCode&gt;AA&lt;/AirlineCode&gt;           &lt;AirlineName&gt;American&lt;/AirlineName&gt;           &lt;FlightNumber&gt;43&lt;/FlightNumber&gt;           &lt;DepartureGatewayCode&gt;MCO&lt;/DepartureGatewayCode&gt;           &lt;DepartureGatewayName&gt;Orlando International Airport&lt;/DepartureGatewayName&gt;         &lt;/AirSegment&gt;       &lt;/AirSegmentList&gt;       &lt;GuestList&gt;         &lt;Guest&gt;           &lt;DMEGuestId&gt;${VAR2}&lt;/DMEGuestId&gt;         &lt;/Guest&gt;       &lt;/GuestList&gt;     &lt;/Transfer&gt;   &lt;/TransferList&gt; &lt;/DMEReservation&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_PKG}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${PACKAGING_CONTEXT}/event/TAG/DMEReservation/${DMEReservationId}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Precedence Based Guest profile By XID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">guestType4</stringProp>
            <stringProp name="JSONPATH">$.guestType</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="448241545">transactional</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">guestType4</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PBP_PRFL_CNCL_Delete" enabled="true">
          <stringProp name="dataSource">${ENV}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">delete from pbp_prfl_cncl where xid=&apos;${SWID1_XID}&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PBP_IDNTFR_CNCL_Delete" enabled="true">
          <stringProp name="dataSource">${ENV}</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">delete from pbp_idntfr_cncl where xid=&apos;${SWID1_XID}&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provide Precedence Based Guest profile By XID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOST_ASM}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${ASSEMBLY_CONTEXT}/guest/${SWID1_XID}/profile</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept </stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">swid</stringProp>
                <stringProp name="Header.value">%7B${SWID1}%7D</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">guestType5</stringProp>
            <stringProp name="JSONPATH">$.guestType</stringProp>
            <stringProp name="DEFAULT">NULL</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="448241545">transactional</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">guestType5</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PBP_PRFL_CNCL_DB_Validation" enabled="true">
          <stringProp name="dataSource">${ENV}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) COUNT_PBP_PRFL from pbp_idntfr_cncl where xid=&apos;${SWID1_XID}&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">COUNT_PBP_PRFL</stringProp>
            <stringProp name="RegexExtractor.regex">COUNT_PBP_PRFL\n((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">12</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">COUNT_PBP_PRFL</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PBP_IDNTFR_CNCL_DB_Validation" enabled="true">
          <stringProp name="dataSource">${ENV}</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select count(*) COUNT_PBP_IDNTFR  from pbp_prfl_cncl where xid=&apos;${SWID1_XID}&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">COUNT_PBP_IDNTFR</stringProp>
            <stringProp name="RegexExtractor.regex">COUNT_PBP_IDNTFR\n((.+?)*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">12</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49">1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">COUNT_PBP_IDNTFR</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">D:\svn\Root\nge-app-source\sf\regression-suite\CSV\EnvironmentVariables.csv</stringProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames"></stringProp>
      </CSVDataSet>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
